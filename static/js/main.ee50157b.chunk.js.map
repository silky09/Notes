{"version":3,"sources":["components/DateTime/Time.jsx","components/DarkMode/DarkModePage.jsx","components/Header/Header.jsx","components/CreateArea/CreateArea.jsx","components/Note/Note.jsx","components/Footer/Footer.jsx","components/App/App.jsx","index.js"],"names":["Time","myDate","Date","day","getDate","monthNames","toLocaleString","month","year","getFullYear","now","toLocaleTimeString","useState","time","setTime","setInterval","currentHours","getHours","message","colorChange","color","className","style","DarkModePage","theme","clickButton","body","document","lightTheme","darkTheme","localStorage","getItem","classList","add","onClick","e","replace","target","remove","setItem","id","Header","logo","src","alt","CreateArea","props","title","content","note","setNote","InputEvent","name","value","prevData","expand","setExpand","type","onChange","placeholder","autoComplete","rows","Zoom","in","Fab","preventDefault","passNote","Note","onDelete","Footer","currentYear","App","addItem","setAddItem","deleteItem","filter","currentVal","index","map","val","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ee50157b.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport './time.css';\r\n\r\n\r\nconst Time = () => {\r\n  const myDate = new Date();\r\n  const day = myDate.getDate();\r\n  const monthNames = myDate.toLocaleString('default', { month: 'long' });\r\n  const year = myDate.getFullYear();\r\n  \r\n  // used hook for adding live clock\r\n  let now = new Date().toLocaleTimeString('en-GB');\r\n\r\n  const [time, setTime] = useState(now);\r\n\r\n  const updateTime = () => {\r\n  now = new Date().toLocaleTimeString('en-GB');\r\n  setTime(now);\r\n  }\r\n  setInterval(updateTime, 1000);\r\n\r\n  \r\n  const currentHours = myDate.getHours();\r\n  let message = \"\";\r\n  \r\n  const colorChange = {\r\n    color: \"\"\r\n  };\r\n  \r\n  if (currentHours < 12) {\r\n    message = \"Good Morning\";\r\n    colorChange.color = \"red\";\r\n  } else if (currentHours < 18) {\r\n    message = \"Good Afternoon\";\r\n    colorChange.color = \"green\";\r\n  } else {\r\n    message = \"Good Evening\";\r\n    colorChange.color = \"blue\";\r\n  }\r\n  \r\n  return (\r\n    <>\r\n      <div>\r\n        <h4><span className=\"msg_font\" style={colorChange} >{message}</span>&nbsp;&nbsp;{day} {monthNames} {year}&nbsp;&nbsp;<span className=\"msg_font\" style={colorChange}>{time}</span></h4>\r\n        {/* <h4>It is currently  <span style={colorChange}>{time}, {day} {monthNames} {year}</span> </h4> */}\r\n        \r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Time\r\n\r\n","import React from 'react';\r\nimport './DarkModePage.css';\r\n\r\nconst DarkModePage = () => {\r\n  let clickButton = \"clicked\";\r\n  const body = document.body; // contains the content for the document.\r\n  const lightTheme = \"light\";\r\n  const darkTheme = \"dark\";\r\n  let theme;\r\n  // using window.localStorage\r\n  \r\n  if (localStorage) {\r\n    theme = localStorage.getItem(\"theme\");\r\n  }\r\n  (theme === lightTheme || theme === darkTheme) ? body.classList.add(theme) : body.classList.add(lightTheme);\r\n\r\n function switchTheme(e) {\r\n   if (theme === darkTheme) {\r\n     body.classList.replace(darkTheme, lightTheme) // body.classList returns a live DOMTokenList(replace, add,remove)\r\n     e.target.classList.remove(clickButton)\r\n     localStorage.setItem(\"theme\", \"light\")\r\n     theme = lightTheme\r\n   } else {\r\n     body.classList.replace(lightTheme, darkTheme)\r\n     e.target.classList.remove(clickButton)\r\n     localStorage.setItem(\"theme\", \"dark\")\r\n     theme = darkTheme\r\n   }\r\n }\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <button onClick={switchTheme}\r\n          className={theme === \"dark\" ? clickButton : ''}\r\n          id=\"darkMode\"></button>\r\n      </div>\r\n    </>\r\n    \r\n  )\r\n}\r\n\r\nexport default DarkModePage\r\n","import React from 'react'\r\nimport './header.css'\r\nimport Time from '../DateTime/Time'\r\n//import {useHistory} from 'react-router-dom'\r\nimport DarkModePage from '../DarkMode/DarkModePage'\r\n\r\n\r\nconst Header = () => {\r\n\r\n  // const history = useHistory();\r\n  // function handleClick() {\r\n  //   history.push(\"/\");\r\n  // } \r\n  const logo = <img className=\"header_logo\" src=\"https://www.clipartkey.com/mpngs/m/20-204932_pin-check-mark-symbol-png-check-mark-symbol.png\" alt=\"task_logo\"  />;\r\n    return (\r\n        <div>\r\n        <header>\r\n           {logo}  \r\n          <h1> Notes</h1>\r\n          <Time />\r\n          <DarkModePage />\r\n          {/* <button className=\"header_button\" onClick={handleClick}>Log out</button> */}\r\n         </header> \r\n          <br />\r\n           <hr /> \r\n        </div>\r\n    \r\n        \r\n\r\n    \r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React, {useState} from 'react';\r\nimport './CreateArea.css';\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Zoom from '@material-ui/core/Zoom';\r\nimport Fab from '@material-ui/core/Fab';\r\n // Fab --> floating action button\r\n// for adding icons\r\n// npm install @material-ui / core\r\n// npm install @material-ui/icons\r\n\r\n\r\nconst CreateArea = (props) => {\r\n  const [note, setNote] = useState({  // this const keeps track the title and content\r\n    title: \"\",\r\n    content: \"\",\r\n  });\r\n  \r\n   function InputEvent(e) {\r\n     const { name, value } = e.target;  // de-structured object\r\n     setNote ((prevData) => {\r\n       return {\r\n         ...prevData,\r\n         [name]: value // setNote receive the previous data(existing notes)\r\n       };\r\n        \r\n     })\r\n     // console.log(note);\r\n   }\r\n\r\n  \r\n\r\n  function addEvent(e) {\r\n     if(note.title !== \"\" || note.content!== \"\" ){ // used this condition so that empty notes can be added\r\n     e.preventDefault(); // whenever we press the submit button it refresh the page so use >>> e.preventDefault(); for not refreshing the screen\r\n     props.passNote(note);\r\n     setNote({\r\n       title: \"\",\r\n       content: \"\",\r\n     });\r\n   };\r\n  }\r\n  const [expand, setExpand] = useState(false); // for expanding input area\r\n\r\n  function expandIt() {\r\n    setExpand(true);\r\n  }\r\n  // function backToNormal() {\r\n  //   setExpand(false);\r\n  // }\r\n \r\n  return (\r\n    <div>\r\n      <form className=\"create-note\" >\r\n        {expand ? <input name=\"title\" type=\"text\" onChange={InputEvent}\r\n        value={note.title} placeholder=\"Title\" autoComplete=\"on\" /> : null}\r\n        <p>\r\n          <textarea\r\n            onClick={expandIt}\r\n            onChange={InputEvent} // used for hold the value \r\n            value={note.content}\r\n            name=\"content\"\r\n            placeholder=\"Take a note...\"\r\n            rows={expand ? 3 : 1}\r\n            >\r\n            </textarea>\r\n        </p>\r\n        {/* expand is set to false, so add icon will display after click on textarea  */}\r\n        <Zoom in={expand}>\r\n          <Fab onClick={addEvent}><AddIcon /></Fab> \r\n        </Zoom>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CreateArea\r\n","import React from 'react';\r\nimport './note.css';\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\n\r\n\r\nconst Note = (props) => {\r\n  function deleteNote() {\r\n    props.onDelete(props.id)\r\n  }\r\n\r\n  return (\r\n    <div className=\"note\">\r\n      <h1>{props.title}</h1>\r\n      <br/>\r\n      <p>{props.content}</p>\r\n      <button onClick={deleteNote}><DeleteIcon /></button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Note\r\n","import React from 'react'\r\nimport './footer.css'\r\n\r\nconst Footer = () => {\r\n    const myName = 'Silk';\r\n    \r\n\r\nlet date = new Date();\r\nlet currentYear = date.getFullYear();\r\n    return (\r\n        <div className=\"footer\">\r\n            <footer>\r\n                <p>Made with 🧡 &nbsp;and&nbsp;☕️ &nbsp;by {myName}</p>\r\n                <p className=\"copyright\">© {currentYear} All rights reserved.</p>\r\n\r\n            </footer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React, { useState } from 'react'\r\nimport Header from '../Header/Header'\r\nimport CreateArea from '../CreateArea/CreateArea'\r\nimport Note from '../Note/Note'\r\nimport Footer from '../Footer/Footer'\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n  const [addItem, setAddItem] = useState([]);\r\n\r\n  function addNote(note) {\r\n    // alert(\"i am a note\");\r\n    setAddItem((prevData) => {\r\n      return [...prevData, note]; // returning array\r\n    });\r\n   // console.log(\"note\");\r\n  };\r\n\r\n  function deleteItem(id) {\r\n    //console.log(\"deleted\");\r\n    setAddItem((prevData) => {\r\n      return [...prevData.filter((currentVal, index) => {\r\n        return index !== id \r\n      })]\r\n    })\r\n  }\r\n    return (\r\n        <div>\r\n        <Header />\r\n        <CreateArea\r\n          passNote={addNote} />\r\n           {/* passNote is a props */}\r\n        \r\n        { addItem.map((val, index)=>{ // map contains 4 values\r\n          return <Note\r\n          key={index}\r\n          id={index}\r\n          title={val.title}\r\n          content={val.content}\r\n          onDelete={deleteItem}\r\n          />\r\n        })}\r\n        <Footer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}